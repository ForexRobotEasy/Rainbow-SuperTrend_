mql5
//+------------------------------------------------------------------+
//|                                            Rainbow SuperTrend.mq5 |
//|                        https://www.forexroboteasy.com              |
//|                                               Forex Robot Easy Team |
//+------------------------------------------------------------------+
#property copyright 'Forex Robot Easy Team'
#property link      'https://www.forexroboteasy.com'
#property version   '1.1'

// Global variables
double rainbowSuperTrendBuffer[];
double stopLossBuffer[];

//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+
int OnInit()
{
    // Set indicator buffers
    SetIndexBuffer(0, rainbowSuperTrendBuffer, INDICATOR_DATA);
    SetIndexBuffer(1, stopLossBuffer, INDICATOR_CALCULATIONS);

    // Set indicator labels
    SetIndexLabel(0, 'Rainbow SuperTrend');
    SetIndexLabel(1, 'Stop Loss');

    // Set indicator style
    SetIndexStyle(0, DRAW_LINE);
    SetIndexStyle(1, DRAW_LINE);

    return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
{
    // Calculate Rainbow SuperTrend
    for (int i = prev_calculated; i < rates_total; i++)
    {
        rainbowSuperTrendBuffer[i] = CalculateRainbowSuperTrend(i, close);
        stopLossBuffer[i] = CalculateStopLoss(i, rainbowSuperTrendBuffer);
    }

    return(rates_total);
}

//+------------------------------------------------------------------+
//| Calculate Rainbow SuperTrend                                     |
//+------------------------------------------------------------------+
double CalculateRainbowSuperTrend(const int index, const double &close[])
{
    // Perform calculations based on ATR model
    double atr = iATR(Symbol(), Period(), 14, index);

    // Calculate trend direction
    double trendDirection = close[index] > close[index - 1] ? 1 : -1;

    // Adjust trend direction based on ATR
    if (close[index] + atr * trendDirection > rainbowSuperTrendBuffer[index - 1])
        trendDirection = 1;
    else if (close[index] - atr * trendDirection < rainbowSuperTrendBuffer[index - 1])
        trendDirection = -1;

    // Calculate Rainbow SuperTrend value
    double rainbowSuperTrend = close[index - 1] + atr * trendDirection;

    return rainbowSuperTrend;
}

//+------------------------------------------------------------------+
//| Calculate Stop Loss                                              |
//+------------------------------------------------------------------+
double CalculateStopLoss(const int index, const double &rainbowSuperTrend[])
{
    // Suggest stop loss points based on SuperTrend line
    double stopLoss = 0.0;
    if (rainbowSuperTrend[index] > rainbowSuperTrend[index - 1])
        stopLoss = rainbowSuperTrend[index - 1];
    else if (rainbowSuperTrend[index] < rainbowSuperTrend[index - 1])
        stopLoss = rainbowSuperTrend[index - 1];
    else
        stopLoss = rainbowSuperTrend[index];

    return stopLoss;
}
